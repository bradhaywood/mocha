NAME
    mocha - Modern-ish Perl 5 pragma Prototype

SYNOPSIS
        # imports Moo, Method::Signatures, 5.10 features (say, switch, etc),
        use mocha;

        # imports the same, but Moo::Role instead of Moo
        use mocha as => 'role';

        # lose the signatures
        use mocha no => [qw/ sigs /];
    
        # lose signatures and Moo
        use mocha no => [qw/ sigs oop /];

        # want Moose instead of Moo?
        use mocha with => 'Moose';

WHY MOCHA??
    Why not? Everyone has had their own opinions about the whole Perl 5
    rename/fork/new version explosion, mine is simple. Forget changing it
    dramatically - add a new pragma. One that imports everything that fixes
    most of the gripes outsiders have with our language. There was talk of
    adding a MOP into Perl core. I'm not 100% sure what this means, but I
    wouldn't like it to be forced. So we have a simple pragma you can turn
    on to give you these abilities, and more, like signatures. OK, so you
    can do all of this already, why would I want to use mocha? I was writing
    several roles and the top of my files looks something like this:

        package MyApp::Role;
    
        use 5.010;
        use Method::Signatures;
        use Moo::Role;

    Now, they look like this

        package MyApp::Role;
        use mocha as => 'role';

    It doesn't seem like a big difference, but to someone from the outside
    looking at Perl, that's a lot nicer.

DIFFERENCES
    I guess the closest module to mocha is nextgen. However, there are a few
    differences. Firstly, mocha imports Method::Signatures so you can use
    "method" and "func" with signatures instead of subs. Also, it utilises
    Moo instead of Moose by default. Mocha also allows you to change the
    framework if you wanted to use something else (ie: Moose or Mouse, if
    you really must). And mocha also supports Roles, which means instead of
    just importing the base OOP framework module, it will import Moo::Role
    instead using a simple human-readable command.

AUTHOR
    Brad Haywood <brad@perlpowered.com>

LICENSE
    This library is free software. You can redistribute it and/or modify it
    under the same terms as Perl itself.

